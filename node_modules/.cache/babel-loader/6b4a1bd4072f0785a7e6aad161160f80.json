{"ast":null,"code":"var _jsxFileName = \"/Users/amnahabdulal/Desktop/websites/react/covid-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyDate] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyDate(await fetchDailyData());\n    };\n\n    fetchApi();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(250,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }) : null;\n  const barChar = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths']\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/amnahabdulal/Desktop/websites/react/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","country","dailyData","setDailyDate","fetchApi","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChar","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEQ,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CACN;AACIV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADV;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,WAAW,EAAE,SAHjB;AAIIC,QAAAA,IAAI,EAAE;AAJV,OADM,EAON;AACId,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADV;AAEIH,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIG,QAAAA,eAAe,EAAE,mBAJrB;AAKIF,QAAAA,IAAI,EAAE;AALV,OAPM;AAFR,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,GAoBc,IArBlB;AAyBA,QAAMG,OAAO,GACTjB,IAAI,CAACW,SAAL,gBAEQ,oBAAC,GAAD;AACA,IAAA,IAAI,EAAI;AACPJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAc,WAAd,EAA4B,QAA5B;AADD,KADR;AAKA,IAAA,OAAO,EAAE;AACLW,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBpB,OAAQ;AAAnD;AAFF,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,GAYQ,IAbZ;AAeA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,SADL,CADJ;AAKH,CAvDD;;AAyDA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\n\n\nconst Chart = ({ data, country }) => {\n    const [dailyData, setDailyDate] = useState([]);\n\n    useEffect(() => {\n        const fetchApi = async () => {\n            setDailyDate(await fetchDailyData());\n        }\n        fetchApi();\n    })\n\n    const lineChart = (\n        dailyData.length\n            ? (\n                <Line\n                    data={{\n                        labels: dailyData.map(({ date }) => date),\n                        datasets: [\n                            {\n                                data: dailyData.map(({ confirmed }) => confirmed),\n                                label: 'Infected',\n                                borderColor: '#3333ff',\n                                fill: true\n                            },\n                            {\n                                data: dailyData.map(({ deaths }) => deaths),\n                                label: 'Deaths',\n                                borderColor: 'red',\n                                backgroundColor: 'rgba(250,0,0,0.5)',\n                                fill: true\n                            }],\n                    }}\n                />) : null\n\n    );\n\n    const barChar = (\n        data.confirmed\n            ? (\n                <Bar\n                data = {{\n                 labels: ['Infected' , 'Recovered' , 'Deaths' ],\n                 \n                }}\n                options={{\n                    legend: {display: false},\n                    title: {display: true , text: `Current state in ${country}`}\n                }}\n                />\n            ) : null\n    );\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}